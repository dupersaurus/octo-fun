# Background: #000d14
# FG1: #00aeff
# FG2: #fff
# Blend: #fff
# Silence: #000d14

:alias x v1
:alias y v2

: main
    builder-loop
    game-loop
;

:macro stage-data-index-shift index {
    index <<= index
    index <<= index
    index <<= index
}

############################################################
# Builder
############################################################
# temp

# permanent
:alias selected-bot-stage    v3
:alias selected-mid-stage    v4
:alias selected-top-stage    v5
:alias current-stage         v6

:alias count-bot-stage       v7
:alias unlock-bot-stage      v8
:alias count-mid-stage       v9
:alias unlock-mid-stage      va
:alias count-top-stage       vb
:alias unlock-top-stage      vc

:alias stage-offset          vd
:alias stage-height          ve

:const BOTTOM_STAGE 0
:const MIDDLE_STAGE 2
:const TOP_STAGE 4
:const STAGE_TOO_FAR 6
:const SHIP_Y 18
:const UI_Y 36
:const BOTTOM_STAGE_X 24
:const MIDDLE_STAGE_X 64
:const TOP_STAGE_X 104

: builder-loop
    hires

    current-stage := BOTTOM_STAGE
    selected-bot-stage := 0
    selected-mid-stage := 0
    selected-top-stage := 0
    
    i := builder-data
    load count-bot-stage - unlock-top-stage

    apply-bottom-stage
    apply-middle-stage
    apply-top-stage
    draw-stage-arrow

    loop
        v1 := key
        if v1 == 6 then jump launch-rocket
        read-input
    again
;

: launch-rocket
    #:breakpoint save-rocket-data
    i := rocket-data
    save selected-bot-stage - selected-top-stage
;

: read-input
    v0 := current-stage
    if v1 == OCTO_KEY_A then jump0 select-previous
    if v1 == OCTO_KEY_D then jump0 select-next
    if v1 == OCTO_KEY_W then jump stage-up
    if v1 == OCTO_KEY_S then jump stage-down
;

: stage-up
    draw-stage-arrow
    current-stage += 2
    if current-stage == STAGE_TOO_FAR then current-stage := BOTTOM_STAGE
    draw-stage-arrow
;

: stage-down
    draw-stage-arrow
    current-stage += -2
    if current-stage == -2 then current-stage := TOP_STAGE
    draw-stage-arrow
;

: draw-stage-arrow
    if current-stage == BOTTOM_STAGE    then x := BOTTOM_STAGE_X
    if current-stage == MIDDLE_STAGE    then x := MIDDLE_STAGE_X
    if current-stage == TOP_STAGE       then x := TOP_STAGE_X

    y := 4
    i := long builder-ui-arrow
    plane 1
    sprite x y 7
;

:macro select-previous-item draw selected-item min max {
    draw

    selected-item += -1
    if selected-item == min begin
        selected-item := max
        selected-item += -1
    end

    draw
}

:macro select-next-item draw selected-item min max {
    draw

    selected-item += 1
    if selected-item == max then selected-item := min

    draw
}

: select-previous
    jump select-previous-bottom
    jump select-previous-middle
    jump select-previous-top
;

: select-next
    jump select-next-bottom
    jump select-next-middle
    jump select-next-top
;

: select-previous-bottom
    select-previous-item apply-bottom-stage selected-bot-stage -1 unlock-bot-stage
;

: select-next-bottom
    select-next-item apply-bottom-stage selected-bot-stage 0 unlock-bot-stage
;

: select-previous-middle
    select-previous-item apply-middle-stage selected-mid-stage -1 unlock-mid-stage
;

: select-next-middle
    select-next-item apply-middle-stage selected-mid-stage 0 unlock-mid-stage
;

: select-previous-top
    select-previous-item apply-top-stage selected-top-stage -1 unlock-top-stage
;

: select-next-top
    select-next-item apply-top-stage selected-top-stage 0 unlock-top-stage
;

:macro apply-stage selected-item data jump-table {
    v0 := selected-item
    stage-data-index-shift v0

    i := data
    i += v0
    load stage-offset - stage-height

    v0 := stage-offset
    jump0 jump-table
}

: apply-bottom-stage
    apply-stage selected-bot-stage bottom-stage-data stage-bottom-jump
;

: apply-middle-stage
    apply-stage selected-mid-stage middle-stage-data stage-middle-jump
;

: apply-top-stage
    apply-stage selected-top-stage top-stage-data stage-top-jump
;

:macro draw-stage X Y selection max {
    x := X
    y := Y
    plane 1
    sprite x y 0

    draw-selection-dots x y selection max
}

:macro draw-selection-dots X Y selection max {
    X += 12
    Y := UI_Y
    v0 := 0
    loop
        i := long builder-ui-dot
        sprite X Y 1
        
        if v0 == selection begin
            plane 2
            sprite X Y 1
            plane 1
        end

        Y += 2
        v0 += 1
        if v0 != max then
    again
}

: draw-bottom-stage
    draw-stage BOTTOM_STAGE_X SHIP_Y selected-bot-stage unlock-bot-stage
;

: draw-middle-stage
    draw-stage MIDDLE_STAGE_X SHIP_Y selected-mid-stage unlock-mid-stage
;

: draw-top-stage
    draw-stage TOP_STAGE_X SHIP_Y selected-top-stage unlock-top-stage
;

############################################################
# Game
############################################################
### temps

# pre-launch
:alias launch-step v7

# flying mode
#:alias steering-counter v5
#:alias drift-offset     v6
#:alias drift-direction  v7
#:alias drift-counter    v8
#:alias drift-step       v9

### permanent

# cache rocket sprite offsets
# only allows 10 stages when offset is saved as offset
# TODO 1: save offset as index and expand
# TODO 2: load offset as needed
:alias game-bottom-stage-data-offset   v9
:alias game-middle-stage-data-offset   va
:alias game-top-stage-data-offset      vb

:alias total-altitude   vc
:alias altitude-step    vd
:alias altitude         ve

:const ROCKET_X             38
:const ROCKET_Y             30
:const SMOKE_LEFT           16
:const SMOKE_RIGHT          32
:const LAUNCH_STEP_COUNT    19
:const LAUNCH_STEP_LAUNCH   2
:const MIN_DRIFT            15
:const MAX_DRIFT            49

:const ALTITUDE_TARGET_0 64
:const ALTITUDE_TARGET_1 128
:const ALTITUDE_TARGET_2 192
:const ALTITUDE_TARGET_3 245

:macro get-stage-data-offset in out temp {
    temp := 0b00111111
    out := in
    out &= temp
}

:macro set-stage-data-offset value to temp {
    temp := 0b11000000
    to &= temp
    to += value
}

:macro get-stage-x-offset in out {
    out := in
    out >>= out
    out >>= out
    out >>= out
    out >>= out
    out >>= out
    out >>= out
}

:macro set-stage-x-offset value to temp {
    value <<= value
    value <<= value
    value <<= value
    value <<= value
    value <<= value
    value <<= value

    temp := 0b00111111
    to &= temp
    to += value
}

:macro draw-exhaust x y temp {
    temp := random 0b11

    plane 2
    if temp == 0 then i := long exhaust-plume-1
    if temp == 1 then i := long exhaust-plume-2
    if temp == 2 then i := long exhaust-plume-3
    if temp == 3 then i := long exhaust-plume-4

    sprite x y 5
}

: game-loop
    clear
    hires

    ## cache rocket information
    i := rocket-data
    load v2
    
    i := bottom-stage-data
    stage-data-index-shift v0
    i += v0

    load v4 - v5
    v4 += 6         # there is no empty bottom stage
    set-stage-data-offset   v4 game-bottom-stage-data-offset ve
    set-stage-x-offset      v5 game-bottom-stage-data-offset ve

    i := middle-stage-data
    stage-data-index-shift v1
    i += v1
    load v4 - v5
    set-stage-data-offset   v4 game-middle-stage-data-offset ve
    set-stage-x-offset      v5 game-middle-stage-data-offset ve

    i := top-stage-data
    stage-data-index-shift v2
    i += v2
    load v4 - v4
    set-stage-data-offset   v4 game-top-stage-data-offset ve

    ## Startup #################################
    draw-game-start-scene
    
    x := 2
    y := ROCKET_Y
    draw-rocket

    ## Wait for launch #########################
    loop
        v0 := 0x6
        if v0 -key then
    again

    ## Launch ##################################

# initial smoke
    launch-step := 0

    plane 2
    i := long launch-smoke-left-1
    x := 1
    y := SMOKE_LEFT
    sprite x y 15

    i := long launch-smoke-right-1
    x := 1
    y := SMOKE_RIGHT
    sprite x y 8

    loop
        step-launch-smoke
        wait-for-frame
        if launch-step != LAUNCH_STEP_LAUNCH then
    again

    ## Lift off ################################
    v0 := 0
    altitude-step := 254
    
# prep rocket
    plane 3
    altitude := 2
    y := ROCKET_Y

    loop
        v4 := v0
        step-launch-smoke

        x := altitude
        y := ROCKET_Y

        v0 := v4
        altitude-step += v0
        if v0 != 255 then v0 += 5
        if vf == 1 then lift-off-draw-rocket

        wait-for-frame

        if x != 38 then
    again

###### Fly ##################################################################
    calculate-total-altitude

    # pre-set
    altitude := 0
    #drift-offset := 0
    #drift-direction := 1
    #drift-counter := 0
    #drift-step := 75
    #steering-counter := 100

    loop
        x := ROCKET_X
        y := ROCKET_Y
        #y += drift-offset
        v0 := 0b1
        v0 &= altitude

        plane 3
        x += -3
        y += -1
        if v0 == 0 then i := long blast-tail-1
        if v0 == 1 then i := long blast-tail-2
        sprite x y 15

        x += -3
        draw-exhaust x y v3

        x += 6
        y += 1
        draw-rocket
        scroll-left

        #accumulate-drift
        y := ROCKET_Y
        #y += drift-offset

        draw-rocket

        x += -3
        y += -1
        if v0 == 0 then i := long blast-tail-2
        if v0 == 1 then i := long blast-tail-1
        sprite x y 15

        fill-next-slice
        wait-for-frame

        altitude += 1
        if altitude != ALTITUDE_TARGET_0 then
    again

###### Orbit ##################################################################
    loop
        x := ROCKET_X
        y := ROCKET_Y

        draw-rocket
        scroll-left
        draw-rocket

        fill-next-slice
        wait-for-frame
    again
;

:macro loop-calculate-total-altitude start delta temp {
    temp := start
    loop
        while temp != 0
        i += delta
        temp += -1
    again
}

: calculate-total-altitude
    # total altitude
    i := rocket-data
    load v2
    
    i := bottom-stage-data
    stage-data-index-shift v0
    i += v0
    v0 := 3
    i += v0
    load v3 - v3

    i := middle-stage-data
    stage-data-index-shift v1
    i += v0
    load v4 - v4
    
    i := top-stage-data
    stage-data-index-shift v2
    i += v0
    load v5 - v5

    i := rocket-altitudes

    # first stage
    v0 := 25
    loop-calculate-total-altitude v3 v0 v1
    v0 := 5
    loop-calculate-total-altitude v4 v0 v1
    v0 := 1
    loop-calculate-total-altitude v5 v0 v1
    load total-altitude - total-altitude
;

#: accumulate-drift
#    v3 := OCTO_KEY_A
#    if v3 key then jump oppose-drift
#
#    v3 := OCTO_KEY_D
#    if v3 key then jump oppose-drift
#
#    full-drift
#;
#
#: oppose-drift
#    v4 := steering-counter
#    v4 -= drift-step
#    drift-counter += v4
#    if vf == 1 begin 
#        drift-offset -= drift-direction
#        if vf == 0 begin
#
#        end
#    end
#;
#
#: full-drift
#    drift-counter += drift-step
#    if vf == 1 then drift-offset += drift-direction
#;

: lift-off-draw-rocket
# plume
    x += -4
    y += -1
    draw-exhaust x y v5
    x += 4

# rocket
    y += 1
    draw-rocket

    x += 1
    draw-rocket
    altitude := x
;

# set x and y aliases to position
: draw-rocket
    plane 3
    v5 := x

    # bottom
    get-stage-data-offset   game-bottom-stage-data-offset v3 vf
    i := long rocket-stage
    i += v3
    sprite v5 y 3

    # mid
    get-stage-x-offset      game-bottom-stage-data-offset v3
    v5 += v3
    get-stage-data-offset   game-middle-stage-data-offset v3 vf
    i := long rocket-stage
    i += v3
    sprite v5 y 3

    # top
    get-stage-x-offset      game-middle-stage-data-offset v3
    v5 += v3
    get-stage-data-offset   game-top-stage-data-offset v3 vf
    i := long rocket-stage
    i += v3
    sprite v5 y 3
;

: wait-for-frame
    vf := 10
    delay := vf
    
    loop
        vf := delay
        if vf != 0 then
    again
;

: draw-game-start-scene
    plane 1

    i := long ground-trees
    v0 := 0
    v1 := 0
    sprite v0 v1 15

    i := long ground-plane
    v1 := 15
    sprite v0 v1 15

    i := long ground-launcher
    v1 := 30
    sprite v0 v1 15

    i := long ground-trees
    v1 := 45
    sprite v0 v1 15

    i := long ground-plane
    v1 := 60
    sprite v0 v1 15
		
    x := 8
    y := 0
    i := sky-full

    loop
        loop
            sprite x y 15
            y += 15

            if x > 64 begin
                v0 := random 0b111
                if v0 == 0 begin
                    i := long cloud-1
                    
                    plane 2
                    sprite x y 15
                    plane 1
                    sprite x y 15
                    
                    i := long sky-full
                end
            end

            if y != 75 then
        again

        x += 8
        y := 0

        if x != 128 then
    again
;

: fill-next-slice
    i := long next-slice-index-table
    i += altitude

    load v0
    jump0 select-sky-jump
; 

: fill-orbit-slice

;
 
: draw-sky-slice
    v3 := 124
    v4 := 0
    plane 1

    loop
        sprite v3 v4 15

        v4 += 15
        if v4 != 75 then
    again
;

: select-sky-jump
    jump use-sky-1
    jump use-sky-2
    jump use-sky-2
    jump use-sky-3
    jump use-sky-3
    jump use-sky-4
    jump use-sky-4
    jump use-sky-5
;

: use-sky-1     i := long sky-1 jump draw-sky-slice
: use-sky-2     i := long sky-2 jump draw-sky-slice
: use-sky-3     i := long sky-3 jump draw-sky-slice
: use-sky-4     i := long sky-4 jump draw-sky-slice
: use-sky-5     i := long sky-5 jump draw-sky-slice

: step-launch-smoke
    if launch-step == LAUNCH_STEP_COUNT then return

    v1 := 254
    pick-launch-smoke
    v1 := 255
    pick-launch-smoke
    launch-step += 1
    v1 := 254
    pick-launch-smoke
    v1 := 255
    pick-launch-smoke
;

: pick-launch-smoke
    v0 := launch-step
    v0 <<= v0
    jump0 select-launch-smoke
;

: select-launch-smoke
    jump use-launch-smoke-1
    jump use-launch-smoke-1
    jump use-launch-smoke-2
    jump use-launch-smoke-2
    jump use-launch-smoke-3
    jump use-launch-smoke-3
    jump use-launch-smoke-4
    jump use-launch-smoke-4
    jump use-launch-smoke-5
    jump use-launch-smoke-5
    jump use-launch-smoke-6
    jump use-launch-smoke-6
    jump use-launch-smoke-7
    jump use-launch-smoke-7
    jump use-launch-smoke-8
    jump use-launch-smoke-8
    jump use-launch-smoke-9
    jump use-launch-smoke-9
    jump use-launch-smoke-10
    jump use-launch-smoke-10
;

: use-launch-smoke-1 
    if v1 == 254 then i := long launch-smoke-left-1 
    if v1 == 255 then i := long launch-smoke-right-1 
    jump draw-launch-smoke
    
: use-launch-smoke-2 
    if v1 == 254 then i := long launch-smoke-left-2 
    if v1 == 255 then i := long launch-smoke-right-2 
    jump draw-launch-smoke
    
: use-launch-smoke-3 
    if v1 == 254 then i := long launch-smoke-left-3 
    if v1 == 255 then i := long launch-smoke-right-3 
    jump draw-launch-smoke

: use-launch-smoke-4 
    if v1 == 254 then i := long launch-smoke-left-4 
    if v1 == 255 then i := long launch-smoke-right-4 
    jump draw-launch-smoke

: use-launch-smoke-5 
    if v1 == 254 then i := long launch-smoke-left-5 
    if v1 == 255 then i := long launch-smoke-right-5 
    jump draw-launch-smoke

: use-launch-smoke-6 
    if v1 == 254 then i := long launch-smoke-left-6 
    if v1 == 255 then i := long launch-smoke-right-6 
    jump draw-launch-smoke

: use-launch-smoke-7 
    if v1 == 254 then i := long launch-smoke-left-7 
    if v1 == 255 then i := long launch-smoke-right-7 
    jump draw-launch-smoke

: use-launch-smoke-8 
    if v1 == 254 then i := long launch-smoke-left-8 
    if v1 == 255 then i := long launch-smoke-right-8 
    jump draw-launch-smoke

: use-launch-smoke-9 
    if v1 == 254 then i := long launch-smoke-left-9 
    if v1 == 255 then i := long launch-smoke-right-9 
    jump draw-launch-smoke

: use-launch-smoke-10 
    if v1 == 254 then  i := long launch-smoke-left-10 
    if v1 == 255 then  i := long launch-smoke-right-10 
    jump draw-launch-smoke

: draw-launch-smoke
    plane 2
    if v1 == 254 then y := SMOKE_LEFT
    if v1 == 255 then y := SMOKE_RIGHT
    x := 1
    sprite x y 15
;

: stage-bottom-jump
    i := long stage-bottom-short-thin-1     jump draw-bottom-stage
    i := long stage-bottom-tall-thin-1      jump draw-bottom-stage
    i := long stage-bottom-short-fat-1      jump draw-bottom-stage
    i := long stage-bottom-tall-fat-1       jump draw-bottom-stage

: stage-middle-jump
    i := long stage-middle-none             jump draw-middle-stage
    i := long stage-middle-short-thin-1     jump draw-middle-stage
    i := long stage-middle-tall-thin-1      jump draw-middle-stage
    i := long stage-middle-short-fat-1      jump draw-middle-stage
    i := long stage-middle-tall-fat-1       jump draw-middle-stage

: stage-top-jump
    i := long stage-top-none             jump draw-top-stage
    i := long stage-top-short-thin-1     jump draw-top-stage
    i := long stage-top-tall-thin-1      jump draw-top-stage
    i := long stage-top-short-fat-1      jump draw-top-stage
    i := long stage-top-tall-fat-1       jump draw-top-stage

: ground-plane 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F
: ground-trees 0x7F 0x57 0x0F 0x6F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x4F 0x07 0x4F 0x7F
: ground-launcher 0x3F 0x3F 0x39 0x01 0x7F 0x3F 0x3F 0x3F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F
: ground-pad 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x7F 0x3F 0x3F

: rocket-stage
    0x00 0x00 0x00 0x00 0x00 0x00   # none (0)
    0x00 0xF0 0x00 0x00 0xF0 0x00   # short thin (6)
    0x00 0xFF 0x00 0x00 0xFF 0x00   # long-thin (12)
    0xF0 0xF0 0xF0 0xF0 0xF0 0xF0   # short-fat (18)
    0xFF 0xFF 0xFF 0xFF 0xFF 0xFF   # long-fat (24)

# jump index to which sky to use for each altitude value
: next-slice-index-table
    0  0  0  0  0  0  0  0  #0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
    2  2  2  2  2  2  2  2  #2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  
    4  4  4  4  4  4  4  4  #4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  
    6  6  6  6  6  6  6  6  #6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  
    8  8  8  8  8  8  8  8  #8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  
    10 10 10 10 10 10 10 10 #10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 
    12 12 12 12 12 12 12 12 #12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 
    14 14 14 14 14 14 14 14 14 #14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14

: sky-full 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
: sky-1 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0 0xF0
: sky-2 0x70 0xF0 0x70 0xF0 0xB0 0xF0 0xB0 0xF0 0xD0 0xF0 0xD0 0xF0 0xF0 0xE0 0xF0
: sky-3 0x70 0xD0 0x70 0xD0 0xB0 0xE0 0xB0 0xE0 0xD0 0x70 0xD0 0x70 0xE0 0xB0 0xE0
: sky-4 0x10 0x20 0x10 0x20 0x10 0x80 0x10 0x80 0x40 0x80 0x40 0x80 0x40 0x20 0x40
: sky-5 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: next-orbit-slice-index-table
    0 0 0 0 0 0 0 0 2 4 6 8 10 12 14
;

: cloud-1 0x80 0xC0 0xA0 0x90 0x88 0x88 0x88 0x90 0x98 0xA4 0xC2 0x82 0x84 0x98 0xE0

: launch-smoke-left-1  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xC0 0xE0 0xC0 0x80
: launch-smoke-left-2  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x30 0x68 0xC8 0x90 0xA0 0xC0 0x80
: launch-smoke-left-3  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x38 0x6C 0xD2 0xAD 0x52 0xCC 0x80 0x80
: launch-smoke-left-4  0x00 0x00 0x00 0x00 0x30 0x58 0xA8 0xFC 0xEC 0xD8 0xA8 0x50 0xE0 0x80 
: launch-smoke-left-5  0x00 0x50 0xE4 0x70 0xB0 0x58 0xB0 0xF4 0x60 0xE8 0xA0 0x50 0x80 0xC0 
: launch-smoke-left-6  0x00 0x48 0x80 0x28 0x82 0x58 0x20 0x74 0x60 0xF8 0xAC 0x74 0xBC 0xC0 
: launch-smoke-left-7  0x80 0x24 0x08 0x01 0x88 0x42 0x38 0x4C 0xD6 0xA2 0xFA 0xCE 0x80 0xC0 
: launch-smoke-left-8  0xA4 0x11 0x40 0x80 0xD0 0x72 0xB8 0x54 0xF4 0xB0 0x50 0xE0 0x80 0x40 
: launch-smoke-left-9  0xA2 0x10 0x48 0x80 0xC9 0x60 0x81 0x42 0xC0 0xA8 0x00 0x90 0x80 0x40 
: launch-smoke-left-10 0x28 0x90 0x44 0x20 0x02 0xA0 0x10 0x00 0x80 0x40 0x00 0xA0 0x00 0x40 

: launch-smoke-right-1  0x80 0xC0 0xE0 0xC0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00  
: launch-smoke-right-2  0x80 0xC0 0xA0 0x90 0xC8 0x68 0x30 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
: launch-smoke-right-3  0x80 0x80 0xCC 0x52 0xAD 0xD2 0x6C 0x38 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
: launch-smoke-right-4  0x80 0xE0 0x50 0xA8 0xD8 0xEC 0xFC 0xA8 0x58 0x30 0x00 0x00 0x00 0x00   
: launch-smoke-right-5  0xC0 0x80 0x50 0xA0 0xE8 0x60 0xF4 0xB0 0x58 0xB0 0x70 0xE4 0x50 0x00   
: launch-smoke-right-6  0xC0 0xBC 0x74 0xAC 0xF8 0x60 0x74 0x20 0x58 0x82 0x28 0x80 0x48 0x00   
: launch-smoke-right-7  0xC0 0x80 0xCE 0xFA 0xA2 0xD6 0x4C 0x38 0x42 0x88 0x01 0x08 0x24 0x80   
: launch-smoke-right-8  0x40 0x80 0xE0 0x50 0xB0 0xF4 0x54 0xB8 0x72 0xD0 0x80 0x40 0x11 0xA4   
: launch-smoke-right-9  0x40 0x80 0x90 0x00 0xA8 0xC0 0x42 0x81 0x60 0xC9 0x80 0x48 0x10 0xA2   
: launch-smoke-right-10 0x40 0x00 0xA0 0x00 0x40 0x80 0x00 0x10 0xA0 0x02 0x20 0x44 0x90 0x28

: blast-tail-1 0x00 0x20 0xC0 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x20 0xC0 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: blast-tail-2 0x20 0x40 0x80 0x40 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x20 0x40 0x80 0x40 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: exhaust-plume-1 0x40 0xB0 0x60 0x90 0x40
: exhaust-plume-2 0x40 0x90 0x60 0xB0 0x40
: exhaust-plume-3 0x60 0xB0 0x80 0x10 0x80
: exhaust-plume-4 0x20 0x30 0x80 0x30 0xA0

# num bottom stages | unlocked bottom | num middle stages | unlocked middle | num top stages | unlocked top
: builder-data 4 4 5 5 5 5

# bottom stage | middle stage | top stage
: rocket-data 0 0 0

# jump offset | world x offset | altitudes x/y/z
: bottom-stage-data
    0  4 10 0 0 0 0 0 
    6  8 20 1 0 0 0 0 
    12 4 30 2 0 0 0 0 
    18 8 40 3 0 0 0 0 
: middle-stage-data
    0  0 0  0 0 0 0 0 # no stage
    6  4 10 1 0 0 0 0
    12 8 20 2 0 0 0 0
    18 4 30 3 0 0 0 0
    24 8 40 4 0 0 0 0
: top-stage-data
    0  0 0  0 0 0 0 0 # no stage
    6  4 10 1 0 0 0 0
    12 8 20 2 0 0 0 0
    18 4 30 3 0 0 0 0
    24 8 40 4 0 0 0 0

# stages = XYZ
# X: X * 25 
# Y: X + Y * 5
# Z: X + Y + Z 
#   100 101 102 103 104
#   110 111 112 113 114
#   120 121 122 123 124
#   130 131 132 133 134
#   140 141 142 143 144
# etc
: rocket-altitudes
    # 20 0 | 45 0 | 30 0 | 60 0
    # 40 10 | 60 20 | 50 15 | 80 25
    # 70 20 | 140 30 | 100 25 | 180 40
    20  70  130 95  160 
    50  100 160 125 190 
    60  110 170 135 200 
    55  105 165 130 195 
    75  125 185 150 215 
    45  95  155 120 185 
    75  125 185 150 215 
    85  135 195 160 225 
    80  130 190 155 220 
    100 150 210 175 240 
    30  80  140 105 170 
    60  110 170 135 200 
    70  120 180 145 210 
    65  115 175 140 205 
    85  135 195 160 225 
    60  110 170 135 200 
    90  140 200 165 230 
    100 150 210 175 240 
    95  145 205 170 235 
    115 165 225 190 255

: builder-ui-dot 0x80
: builder-ui-arrow 0x18 0x18 0x99 0xDB 0x7E 0x3C 0x18

: stage-bottom-short-thin-1   0x00 0x00 0x00 0x00 0x7F 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x7F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-bottom-tall-thin-1    0x00 0x00 0x00 0x00 0x7F 0xFF 0x80 0x01 0xFF 0xFF 0x80 0x01 0x7F 0xFF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-bottom-short-fat-1    0x7F 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x81 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x7F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-bottom-tall-fat-1     0x7F 0xFF 0x80 0x01 0xFF 0xFF 0x80 0x01 0x80 0x01 0x80 0x01 0xFF 0xFF 0x80 0x01 0x7F 0xFF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: stage-middle-none           0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-middle-short-thin-1   0x00 0x00 0x00 0x00 0x7F 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x7F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-middle-tall-thin-1    0x00 0x00 0x00 0x00 0x7F 0xFF 0x80 0x01 0xFF 0xFF 0x80 0x01 0x7F 0xFF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-middle-short-fat-1    0x7F 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x81 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x7F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-middle-tall-fat-1     0x7F 0xFF 0x80 0x01 0xFF 0xFF 0x80 0x01 0x80 0x01 0x80 0x01 0xFF 0xFF 0x80 0x01 0x7F 0xFF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: stage-top-none           0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-top-short-thin-1   0x00 0x00 0x00 0x00 0x7F 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x7F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-top-tall-thin-1    0x00 0x00 0x00 0x00 0x7F 0xFF 0x80 0x01 0xFF 0xFF 0x80 0x01 0x7F 0xFF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-top-short-fat-1    0x7F 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x81 0x00 0x81 0x00 0xFF 0x00 0x81 0x00 0x7F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: stage-top-tall-fat-1     0x7F 0xFF 0x80 0x01 0xFF 0xFF 0x80 0x01 0x80 0x01 0x80 0x01 0xFF 0xFF 0x80 0x01 0x7F 0xFF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00