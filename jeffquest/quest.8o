:alias viewer-count		v5	# viewer count in the current order, [0-99]
:alias viewer-order		v6	# one tick for every 100 viewers
:alias viewer-rollover	v7	# incremental viewer step

:alias px				va
:alias py				vb
:alias wind-force		v3
:alias direction		vc 	# direction wind comes from
:alias next-spawn		vd

# ### stuff that's safe to use for multiple things ###
:alias x				v1
:alias y				v2

:alias debris-data		v1
:alias debrisX			v2
:alias debrisY			v3
:alias debrisAccumulate	v4

:const MASK_DEBRIS_ALIVE 0b00000001
:const MASK_DEBRIS_DEAD  0b11111110
:const MASK_DEBRIS_TYPE  0b00000110

:macro get-debris-alive target temp {
	target := debris-data
	temp := MASK_DEBRIS_ALIVE
	target &= temp
}

:macro set-debris-alive temp {
	temp := MASK_DEBRIS_ALIVE
	debris-data |= temp
}

:macro set-debris-dead temp {
	temp := MASK_DEBRIS_DEAD
	debris-data &= temp
}

:macro get-debris-type target temp {
	target := debris-data
	target &= MASK_DEBRIS_TYPE
	target >>= target
}

# #########
:const WIND_NORTH		0
:const WIND_EAST		1
:const WIND_SOUTH		2
:const WIND_WEST		3

:const SHED_LEFT		56
:const SHED_TOP			24
:const SHED_RIGHT		72
:const SHED_BOTTOM		40

# the left and top bounds of the shed from the perspective of jeff
:const SHED_LEFT_JEFF	52	
:const SHED_TOP_JEFF	16
:const SHED_BOTTOM_JEFF	30

:const DEBRIS_SPAWN_X	120

: main
	title-screen
;

## MEMORY ####################################################################
: debris 
0	# data
0	# x
0	# y
0 	# accumulator

## THE GAME ##################################################################

: title-screen
	x := 11
	y := 5
	plane 2

	i := title-jeffJ
	sprite x y 15

	x += 8
	i := title-jeffE
	sprite x y 7

	x += 6
	i := title-jeffF
	sprite x y 9

	x += 6
	i := title-jeffF
	sprite x y 9

	i := title-questQ
	x := 20
	y := 16
	sprite x y 13

	x += 8
	i := title-questU
	sprite x y 7

	x += 7
	i := title-jeffE
	sprite x y 7

	x += 6
	i := title-questS
	sprite x y 8

	x += 7
	i := title-questT
	sprite x y 10

	v0 := key
	game-loop
;

: game-loop
	hires

	px := SHED_LEFT_JEFF
	py := SHED_TOP
	px += -2

	direction := WIND_EAST
	next-spawn := 0

	draw-shed
	draw-jeff
	draw-viewers

	loop
		update-debris
		read-input
		update-viewers
	again
;

: read-input
	v0 := 0x5
	if v0 key then jump move-up

	v0 := 0x7
	if v0 key then jump move-left

	v0 := 0x8
	if v0 key then jump move-down

	v0 := 0x9
	if v0 key then jump move-right
;

# check collision with the shed at a point and jump to out if no collision
:macro check-shed-collision tx ty out {
	if tx < SHED_LEFT_JEFF 	then jump out
	if tx > SHED_RIGHT		then jump out
	if ty <= SHED_TOP_JEFF	then jump out
	if ty >= SHED_BOTTOM	then jump out
}

: set-jeff-position
	draw-jeff
	px := x
	py := y
	draw-jeff
;

: move-left
	y := py
	x := px
	x += -1
	if x == 255 then x := 0

	if x == px then return

	check-shed-collision x y set-jeff-position
;

: move-right
	y := py
	x := px
	x += 1
	if x == 124 then x := 123

	if x == px then return

	check-shed-collision x y set-jeff-position
;

: move-up
	x := px
	y := py
	y += -1
	if y == 255 then y := 0

	if y == py then return

	check-shed-collision x y set-jeff-position
;

: move-down
	x := px
	y := py
	y += 1
	if y == 55 then y := 54

	if y == py then return

	check-shed-collision x y set-jeff-position
;

# update the viewer count
: update-viewers
	get-wind-force

	viewer-rollover += wind-force
	if vf == 1 begin
		draw-viewers
		viewer-count += 1

		if viewer-count == 100 begin
			viewer-count := 0
			viewer-order += 1
		end
		draw-viewers
	end 
;

# calculate the force of the wind and save to v3
: get-wind-force
	if direction == WIND_NORTH	then jump calculate-north-wind-force
	if direction == WIND_EAST	then jump calculate-east-wind-force
	if direction == WIND_SOUTH	then jump calculate-south-wind-force
	if direction == WIND_WEST	then jump calculate-west-wind-force
;

: calculate-north-wind-force

;

: calculate-east-wind-force
	v4 := 0
	
	if py < SHED_TOP begin 
		v3 := SHED_TOP
		v4 := py
		v4 =- v3
	end

	if py > SHED_BOTTOM_JEFF begin 
		v3 := SHED_BOTTOM_JEFF
		v4 := py
		v4 -= v3
	end

	if px > SHED_LEFT_JEFF begin
		v3 := px
		v3 -= SHED_LEFT_JEFF

		v4 += v3
		v4 += v3
	end

	calculate-force
	wind-force := v4
;

: calculate-south-wind-force

;

: calculate-west-wind-force

;

# calculate the resulting force from how uncovered jeff is, set in v4
: calculate-force
	#if v4 == 0 then return
;

: update-debris
	i := debris
	load debris-data - debrisAccumulate

	#:breakpoint update-debris
	get-debris-alive ve v0
	if ve == 0 then jump check-spawn-debris

	step-debris
;

: check-spawn-debris
	if next-spawn == 0 then jump spawn-debris
	next-spawn -= 1
;

: spawn-debris
	debris-data := 0
	set-debris-alive v0

	debrisX := DEBRIS_SPAWN_X
	debrisY := 32
	debrisAccumulate := 0

	i := debris
	save debris-data - debrisAccumulate

	draw-debris
;

: draw-debris
	i := board
	plane 3
	sprite debrisX debrisY 15
;

: step-debris
	move-debris

	i := debris
	save debris-data - debrisAccumulate
;

: move-debris
	if debrisX == 0 then jump kill-debris

	v0 := 200
	debrisAccumulate += v0
	
	if vf == 1 then jump can-move-debris
;

: can-move-debris
	check-shed-collision debrisX debrisY do-move-debris
	kill-debris
;

: do-move-debris
	draw-debris
	debrisX += -1
	draw-debris
;

: kill-debris 
	set-debris-dead v0
	next-spawn := 30
	draw-debris
;

: draw-shed
	x := SHED_LEFT
	y := SHED_TOP
	i := shed

	plane 2
	sprite x y 0
;

: draw-jeff
	i := jeff-left
	plane 2
	sprite px py 10

	if direction == WIND_EAST begin
		v0 := px
		get-wind-force
		v0 -= wind-force

		if vf == 0 then x := 0

		plane 1
		sprite v0 py 10
	end
;

: draw-viewers
	plane 1
	x := 1
	y := 53
	i := viewer
	sprite x y 10

	draw-viewer-digits
;

: draw-viewer-digits
	i := digits
	bcd viewer-count
	load v2

	v8 := 12
	v9 := 58

	i := hex v1
	sprite v8 v9 5

	i := hex v2
	v8 += 5
	sprite v8 v9 5

	# draw the order
	v0 := 0
	v1 := 0
	loop
		while v0 != viewer-order

		v8 += 5
		i := hex v1
		sprite v8 v9 5

		v0 += 1
	again
;

: digits 0 0 0

: shed
0x00 0x00 0x00 0x00 0x01 0xF8 0x07 0xFC 
0x0F 0xFA 0x11 0xF7 0x20 0xEF 0x40 0x5F 
0x80 0x3F 0x80 0x3F 0x80 0x3F 0x80 0x3E 
0x80 0x3C 0x80 0x38 0x80 0x30 0xFF 0xE0

: board
0x07 0x3E 0xF0 0xC0 0x00 0x00 0x00 0x00 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x07 0x3E 0xF0 0xC0 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: tire
0x38 0x5C 0xB6 0xB6 0x5C 0x38 0x00 0x00 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x38 0x5C 0xB6 0xB6 0x5C
0x38 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: jeff-left		0x20 0x50 0x50 0xA0 0xF0 0x28 0x20 0x50 0x50 0x50
: jeff-right	0x20 0x50 0x50 0x28 0x78 0xA0 0x20 0x50 0x50 0x50
: viewer		0x7E 0x81 0xA5 0x81 0x42 0x3C 0x7E 0xFF 0xFF 0xFF

: title-jeffJ	0xC0 0xFE 0x7F 0x0F 0x06 0x06 0x02 0x02 0x02 0x02 0x06 0xC6 0xCE 0xFC 0x78 
: title-jeffE	0x78 0xD8 0x88 0xF0 0x84 0xFC 0x78
: title-jeffF	0x3C 0x7E 0x62 0x60 0xF0 0x78 0x6C 0x60 0xE0
: title-questQ	0x1C 0x32 0x61 0xC1 0x81 0x81 0x81 0x83 0x97 0x8E 0x5C 0x32 0x01 
: title-questU	0xCE 0x84 0x84 0x84 0xCC 0x7C 0x38
: title-questS	0x3C 0x66 0x62 0x30 0x18 0x8C 0xCC 0x78
: title-questT	0x18 0x38 0x30 0xF0 0x78 0x3C 0x30 0xB0 0xF0 0x60