# ######################################
# JEFF QUEST
#  Octo + clip at edges
#  100/sec
#  BG   #000
#  FG1  #F0F
#  FG2  #0FF
#  Bnd  #FFF
#  Bzz  #909
#  Sil	#222
# ######################################

:alias viewer-count		v5	# viewer count in the current order, [0-99]
:alias viewer-order		v6	# one tick for every 100 viewers
:alias viewer-rollover	v7	# incremental viewer step
:alias game-state  v8

:alias px				va
:alias py				vb
:alias direction		vc 	# direction wind comes from
:alias next-spawn		vd

# ### stuff that's safe to use for multiple things ###
:alias x				v1
:alias y				v2
:alias wind-force		v3

:alias debris-data		v1
:alias debrisX			v2
:alias debrisY			v3
:alias debrisAccumulate	v4

:const STATE_TITLE		1
:const STATE_GAME		2
:const STATE_DEAD		3
:const STATE_END		4

:const MASK_DEBRIS_ALIVE 	 0b00000001
:const MASK_DEBRIS_DEAD  	 0b11111110
:const MASK_DEBRIS_TYPE  	 0b00000110
:const MASK_DEBRIS_SET_TYPE  0b11111001
:const MASK_DEBRIS_DIR_Y	 0b00001000
:const MASK_DEBRIS_SET_DIR_Y 0b11110111

:macro get-debris-alive target temp {
	target := debris-data
	temp := MASK_DEBRIS_ALIVE
	target &= temp
}

:macro set-debris-alive temp {
	temp := MASK_DEBRIS_ALIVE
	debris-data |= temp
}

:macro set-debris-dead temp {
	temp := MASK_DEBRIS_DEAD
	debris-data &= temp
}

:macro get-debris-type target temp {
	target := debris-data
	temp := MASK_DEBRIS_TYPE
	target &= temp
	target >>= target
}

:macro set-debris-type type temp {
	temp := MASK_DEBRIS_SET_TYPE
	debris-data &= temp
	temp := type
	temp <<= temp
	debris-data |= temp
}

:macro get-debris-direction target temp {
	target := debris-data
	temp := MASK_DEBRIS_DIR_Y
	target &= temp
	target >>= target
	target >>= target
	target >>= target
}

:macro set-debris-direction dir temp {
	temp := MASK_DEBRIS_SET_DIR_Y
	debris-data &= temp
	temp := dir
	temp <<= temp
	temp <<= temp
	temp <<= temp
	debris-data |= temp
}

# check collision with the shed at a point and jump to out if no collision
:macro check-shed-collision tx ty out {
	if tx < SHED_LEFT_JEFF 	then jump out
	if tx > SHED_RIGHT		then jump out
	if ty <= SHED_TOP_JEFF	then jump out
	if ty >= SHED_BOTTOM	then jump out
}

:macro check-jeff-collision x y temp out {
	get-jeff-right temp
	if x > temp	then jump out

	temp := x
	temp += 7
	if temp < px then jump out

	temp := y
	temp += 5
	if temp < py then jump out

	get-jeff-bottom temp
	if y > temp	then jump out
}

# #########
:const WIND_NORTH		0
:const WIND_EAST		1
:const WIND_SOUTH		2
:const WIND_WEST		3

:const SHED_LEFT		56
:const SHED_TOP			24
:const SHED_RIGHT		72
:const SHED_BOTTOM		40

# the left and top bounds of the shed from the perspective of jeff
:const SHED_LEFT_JEFF	52	
:const SHED_TOP_JEFF	16
:const SHED_BOTTOM_JEFF	30

:macro get-jeff-right out {
	out := px
	out += 5
}

:macro get-jeff-bottom out {
	out := py
	out += 10
}

:const DEBRIS_SPAWN_X	120

: main
	goto-title

	loop
		if game-state == STATE_TITLE then title-screen
		if game-state == STATE_GAME then game-loop
		if game-state == STATE_DEAD then blow-jeff-away
		if game-state == STATE_END then final-score
	again
;

: goto-title
	game-state := STATE_TITLE
;

: goto-game
	game-state := STATE_GAME
;

: goto-dead
	game-state := STATE_DEAD
;

: goto-end
	game-state := STATE_END
;

## MEMORY ####################################################################
: debris 
0	# data
0	# x
0	# y
0 	# accumulator

## GAME STATES ###############################################################
: title-screen
	clear
	lores

	x := 11
	y := 5
	plane 2

	i := title-jeffJ
	sprite x y 15

	x += 8
	i := title-jeffE
	sprite x y 7

	x += 6
	i := title-jeffF
	sprite x y 9

	x += 6
	i := title-jeffF
	sprite x y 9

	i := title-questQ
	x := 20
	y := 16
	sprite x y 13

	x += 8
	i := title-questU
	sprite x y 7

	x += 7
	i := title-jeffE
	sprite x y 7

	x += 6
	i := title-questS
	sprite x y 8

	x += 7
	i := title-questT
	sprite x y 10

	v0 := key
	game-loop
;

: game-loop
	hires

	px := SHED_LEFT_JEFF
	py := SHED_TOP
	px += -2

	direction := WIND_EAST
	next-spawn := 0

	viewer-count := 0
	viewer-order := 0
	viewer-rollover := 0

	draw-shed
	draw-jeff
	draw-viewers

	loop
		update-debris
		read-input
		update-viewers

		if game-state == 1 then
	again
;

: blow-jeff-away
	draw-jeff-flying
	x := 0

	loop
		y := 25
		x += y
		
		if vf == 1 begin 
			draw-jeff-flying
			px += -1
			draw-jeff-flying
		end

		if px != 0 then 
	again

	goto-end
;

: final-score
	plane 3
	clear
	draw-viewers

	plane 3

	i := gosh-g
	x := 28
	y := 24
	sprite x y 0

	i := gosh-o
	x := 44
	y := 22
	sprite x y 0

	i := gosh-s
	x := 60
	y := 26
	sprite x y 0

	i := gosh-h
	x := 74
	y := 23
	sprite x y 0

	i := gosh-bang
	x := 90
	y := 25
	sprite x y 15

	v0 := key
	goto-title
;

## THE MEAT    ###############################################################
: read-input
	v0 := 0x5
	if v0 key then jump move-up

	v0 := 0x7
	if v0 key then jump move-left

	v0 := 0x8
	if v0 key then jump move-down

	v0 := 0x9
	if v0 key then jump move-right
;

: set-jeff-position
	draw-jeff
	px := x
	py := y
	draw-jeff
;

: move-left
	y := py
	x := px
	x += -1
	if x == 255 then x := 0

	if x == px then return

	check-shed-collision x y set-jeff-position
;

: move-right
	y := py
	x := px
	x += 1
	if x == 124 then x := 123

	if x == px then return

	check-shed-collision x y set-jeff-position
;

: move-up
	x := px
	y := py
	y += -1
	if y == 255 then y := 0

	if y == py then return

	check-shed-collision x y set-jeff-position
;

: move-down
	x := px
	y := py
	y += 1
	if y == 55 then y := 54

	if y == py then return

	check-shed-collision x y set-jeff-position
;

# update the viewer count
: update-viewers
	get-wind-force
	v4 := 10

	if wind-force != 0 begin 
		viewer-rollover += wind-force
		
		if vf == 1 begin
			draw-viewers
			viewer-count += 1
			set-new-viewer-count
		end 
	else
		viewer-rollover -= v4

		if vf == 0 begin
			draw-viewers

			v4 := 1
			viewer-count -= v4

			if vf == 0 then viewer-count := 0
			set-new-viewer-count
		end
	end
;

: set-new-viewer-count
	if viewer-count == 100 begin
		viewer-count := 10
		viewer-order += 1
	end
	draw-viewers
;

# calculate the force of the wind and save to v3
: get-wind-force
	if direction == WIND_NORTH	then jump calculate-north-wind-force
	if direction == WIND_EAST	then jump calculate-east-wind-force
	if direction == WIND_SOUTH	then jump calculate-south-wind-force
	if direction == WIND_WEST	then jump calculate-west-wind-force
;

: calculate-north-wind-force

;

: calculate-east-wind-force
	v4 := 0
	
	if py < SHED_TOP begin 
		v3 := SHED_TOP
		v4 := py
		v4 =- v3
	end

	if py > SHED_BOTTOM_JEFF begin 
		v3 := SHED_BOTTOM_JEFF
		v4 := py
		v4 -= v3
	end

	if px > SHED_LEFT_JEFF begin
		v3 := px
		v3 -= SHED_LEFT_JEFF

		v4 += v3
		v4 += v3
	end

	calculate-force
	wind-force := v4
;

: calculate-south-wind-force

;

: calculate-west-wind-force

;

# calculate the resulting force from how uncovered jeff is, set in v4
: calculate-force
	#if v4 == 0 then return
;

: update-debris
	i := debris
	load debris-data - debrisAccumulate

	get-debris-alive ve v0
	if ve == 0 then jump check-spawn-debris

	move-debris
;

: check-spawn-debris
	if next-spawn == 0 then jump spawn-debris
	next-spawn -= 1
;

: spawn-debris
	debris-data := 0b00000001
	debrisX := random 1

	set-debris-type debrisX debrisY

	debrisX := DEBRIS_SPAWN_X
	debrisY := random 10
	debrisY += -5
	debrisY += py

	#if vf == 1 then debrisY := 0
	#if debrisY > 56 then debrisY := 56

	debrisAccumulate := 0

	save-debris
	draw-debris
;

: draw-debris
	get-debris-type ve v0
	v0 := 32
	i := debris-sprites

	loop
		while ve != 0
		i += v0
		ve += -1
	again

	plane 3
	sprite debrisX debrisY 15
;

: move-debris
	if debrisX == 0 then jump kill-debris

	v0 := 200
	debrisAccumulate += v0
	
	if vf == 1 then jump check-debris-against-jeff
	save-debris
;

: check-debris-against-shed
	check-shed-collision debrisX debrisY check-debris-against-jeff
	kill-debris
;

: check-debris-against-jeff
	check-jeff-collision debrisX debrisY v0 do-move-debris
	kill-jeff
;

: do-move-debris
	draw-debris

	get-debris-type v0 ve
	v0 <<= v0
	jump0 move-debris-type-jump
;

: move-debris-type-jump
	jump move-debris-board
	jump move-debris-tire
;

: move-debris-board
	debrisX += -1
	finalize-step-debris
;

: move-debris-tire
	debrisX += -1
	get-debris-direction v0 ve

	ve := random 150
	#:breakpoint is-ve-0
	if ve == 0 then reverse-y-direction 

	if v0 == 0 then jump move-debris-down
	if v0 == 1 then jump move-debris-up
;

# requires v0 to be the current direction
: reverse-y-direction
	if v0 == 0 begin 
		set-debris-direction 1 ve
	else
		set-debris-direction 0 ve
	end
;

: move-debris-up
	debrisY += -1
	if debrisY > 64 begin 
		debrisY := 0
		set-debris-direction 0 v0
	end

	finalize-step-debris
;

: move-debris-down
	debrisY += 1
	if debrisY > 58 begin 
		debrisY := 58
		set-debris-direction 1 v0
	end

	finalize-step-debris
;

: finalize-step-debris
	draw-debris
	save-debris
;

: save-debris
	i := debris
	save debris-data - debrisAccumulate
;

: kill-debris 
	set-debris-dead v0
	next-spawn := random 30
	next-spawn += 10
	draw-debris
	save-debris
;

: kill-jeff
	kill-debris
	draw-jeff
	goto-dead
;

: draw-shed
	x := SHED_LEFT
	y := SHED_TOP
	i := shed

	plane 2
	sprite x y 0
;

: draw-jeff
	i := jeff-left
	plane 2
	sprite px py 10

	if direction == WIND_EAST begin
		v0 := px
		get-wind-force
		v0 -= wind-force

		if vf == 0 then v0 := 0

		plane 1
		sprite v0 py 10
	end
;

: draw-jeff-flying
	i := jeff-flying
	plane 2
	sprite px py 10
;

: draw-viewers
	plane 1
	x := 1
	y := 53
	i := viewer
	sprite x y 10

	draw-viewer-digits
;

: draw-viewer-digits
	i := digits
	bcd viewer-count
	load v2

	v4 := 12
	v9 := 58

	i := hex v1
	sprite v4 v9 5

	i := hex v2
	v4 += 5
	sprite v4 v9 5

	# draw the order
	v0 := 0
	v1 := 0
	loop
		while v0 != viewer-order

		v4 += 5
		i := hex v1
		sprite v4 v9 5

		v0 += 1
	again
;

: digits 0 0 0

: shed
0x00 0x00 0x00 0x00 0x01 0xF8 0x07 0xFC 
0x0F 0xFA 0x11 0xF7 0x20 0xEF 0x40 0x5F 
0x80 0x3F 0x80 0x3F 0x80 0x3F 0x80 0x3E 
0x80 0x3C 0x80 0x38 0x80 0x30 0xFF 0xE0

: debris-sprites
0x03 0x07 0x1E 0x78 0xE0 0xC0 0x00 0x00 # board
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x03 
0x07 0x1E 0x78 0xE0 0xC0 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x38 0x5C 0xB6 0xB6 0x5C 0x38 0x00 0x00 # tire 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x38 
0x5C 0xB6 0xB6 0x5C 0x38 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: jeff-left		0x20 0x50 0x50 0xA0 0xF0 0x28 0x20 0x50 0x50 0x50
: jeff-right	0x20 0x50 0x50 0x28 0x78 0xA0 0x20 0x50 0x50 0x50
: jeff-flying   0x20 0x50 0x50 0xA4 0x78 0x16 0x08 0x06 0x00 0x00
: viewer		0x7E 0x81 0xA5 0x81 0x42 0x3C 0x7E 0xFF 0xFF 0xFF

: title-jeffJ	0xC0 0xFE 0x7F 0x0F 0x06 0x06 0x02 0x02 0x02 0x02 0x06 0xC6 0xCE 0xFC 0x78 
: title-jeffE	0x78 0xD8 0x88 0xF0 0x84 0xFC 0x78
: title-jeffF	0x3C 0x7E 0x62 0x60 0xF0 0x78 0x6C 0x60 0xE0
: title-questQ	0x1C 0x32 0x61 0xC1 0x81 0x81 0x81 0x83 0x97 0x8E 0x5C 0x32 0x01 
: title-questU	0xCE 0x84 0x84 0x84 0xCC 0x7C 0x38
: title-questS	0x3C 0x66 0x62 0x30 0x18 0x8C 0xCC 0x78
: title-questT	0x18 0x38 0x30 0xF0 0x78 0x3C 0x30 0xB0 0xF0 0x60

: gosh-g
0x00 0x00 0x07 0xE0 0x1E 0x38 0x3C 0x0C 0x38 0x00 0x78 0x00 0x70 0x00 0xF0 0x00 0xE0 0x7C 0xE1 0xFC 0xE1 0xCE 0xF1 0x8E 0x70 0x07 0x3C 0x07 0x1F 0x0E 0x07 0xFC 0x00 0x00 0x07 0xE0 0x1E 0x38 0x3C 0x0C 0x38 0x00 0x78 0x00 0x70 0x00 0xF0 0x00 0xE0 0x7C 0xE1 0xFC 0xE1 0xCE 0xF1 0x8E 0x70 0x07 0x3C 0x07 0x1F 0x0E 0x07 0xFC

: gosh-o
0x00 0x00 0x07 0xE0 0x1E 0x78 0x3C 0x1C 0x38 0x0E 0x78 0x06 0x70 0x06 0xF0 0x03 0xE0 0x03 0xE0 0x03 0xE0 0x03 0xF0 0x03 0x70 0x07 0x3C 0x07 0x1F 0x0E 0x07 0xFC 0x00 0x00 0x07 0xE0 0x1E 0x78 0x3C 0x1C 0x38 0x0E 0x78 0x06 0x70 0x06 0xF0 0x03 0xE0 0x03 0xE0 0x03 0xE0 0x03 0xF0 0x03 0x70 0x07 0x3C 0x07 0x1F 0x0E 0x07 0xFC

: gosh-s
0x07 0x80 0x0C 0xF0 0x18 0x1C 0x10 0x04 0x10 0x04 0x10 0x04 0x10 0x00 0x19 0xF0 0x0F 0xFC 0x03 0xFE 0x20 0x0E 0x60 0x0E 0x78 0x0E 0x7F 0x1E 0x3F 0xFC 0x3F 0xF0 0x07 0x80 0x0C 0xF0 0x18 0x1C 0x10 0x04 0x10 0x04 0x10 0x04 0x10 0x00 0x19 0xF0 0x0F 0xFC 0x03 0xFE 0x20 0x0E 0x60 0x0E 0x78 0x0E 0x7F 0x1E 0x3F 0xFC 0x3F 0xF0

: gosh-h
0x78 0x1E 0x70 0x0C 0x30 0x0C 0x38 0x0C 0x18 0x0C 0x18 0x18 0x19 0xF8 0x0F 0xF8 0x0F 0xCC 0x0F 0x0C 0x0C 0x0C 0x0C 0x0E 0x08 0x06 0x18 0x07 0x1C 0x07 0x3C 0x06 0x78 0x1E 0x70 0x0C 0x30 0x0C 0x38 0x0C 0x18 0x0C 0x18 0x18 0x19 0xF8 0x0F 0xF8 0x0F 0xCC 0x0F 0x0C 0x0C 0x0C 0x0C 0x0E 0x08 0x06 0x18 0x07 0x1C 0x07 0x3C 0x06

: gosh-bang
0x1C 0x7C 0x7C 0x7C 0x3C 0x3C 0x38 0x18 0x18 0x18 0x18 0x10 0x00 0x1C 0x3C 0x1C 0x7C 0x7C 0x7C 0x3C 0x3C 0x38 0x18 0x18 0x18 0x18 0x10 0x00 0x1C 0x3C